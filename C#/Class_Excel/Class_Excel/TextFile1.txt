using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Drawing.Printing;
using Excel = Microsoft.Office.Interop.Excel;
using Office = Microsoft.Office.Core;
using System.Linq;




namespace WindowsFormsApplication1 // код формирования печати
{
    public partial class Form1 : Form
    {
        //private Microsoft.Office.Interop.Excel.Application ObjExcel;
        //private Microsoft.Office.Interop.Excel.Workbook ObjWorkBook;
        //private Microsoft.Office.Interop.Excel.Worksheet ObjWorkSheet;

        private Microsoft.Office.Interop.Excel.Application excel;
        private Microsoft.Office.Interop.Excel.Workbook book;
        private Microsoft.Office.Interop.Excel.Worksheet sheet;

        //bool bold;
        int size;
        //string font;

        

        
        private void out_Cells(int y, int x, string str, bool bold, int size)
        {
            (sheet.Cells[y, x] as Excel.Range).Font.Bold = bold;
            (sheet.Cells[y, x] as Excel.Range).Font.Size = size;
            sheet.Cells[y, x] = str;
        }
        private Excel.Range Oblast(string xy, string yx)
        {
            Excel.Range kontur;
            kontur = (Excel.Range)sheet.get_Range(xy, yx).Cells;
            kontur.Merge(Type.Missing);
            return kontur;
        }
        private Excel.Range Oblast(int x1, int y1, int x2, int y2)
        {
            string xy, yx;
            xy = Convert.ToChar(64 + x1).ToString() + y1.ToString();
            yx = Convert.ToChar(64 + x2).ToString() + y2.ToString();
            Excel.Range kontur;
            kontur = (Excel.Range)sheet.get_Range(xy, yx).Cells;
            kontur.Merge(Type.Missing);
            return kontur;
        }
        private Excel.Range Oblast(int x1, int y1, int x2, int y2, bool xxx)
        {
            string xy, yx;
            xy = Convert.ToChar(64 + x1).ToString() + y1.ToString();
            yx = Convert.ToChar(64 + x2).ToString() + y2.ToString();
            Excel.Range kontur;
            kontur = (Excel.Range)sheet.get_Range(xy, yx).Cells;
            //kontur.Merge(Type.Missing);
            return kontur;
        }
        private void Ramka(Excel.Range kontur, bool up, bool down, bool left, bool right, bool weight)
        {
            Excel.XlBorderWeight tt = Excel.XlBorderWeight.xlMedium;
            if (weight) tt = Excel.XlBorderWeight.xlThin;
            if (down)
            {
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeBottom].LineStyle = Excel.XlLineStyle.xlDouble;
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeBottom].Weight = tt;
            }
            if (up)
            {
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeTop].LineStyle = Excel.XlLineStyle.xlDouble;
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeTop].Weight = tt;
            }
            if (left)
            {
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeLeft].LineStyle = Excel.XlLineStyle.xlDouble;
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeLeft].Weight = tt;
            }
            if (right)
            {
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeRight].LineStyle = Excel.XlLineStyle.xlDouble;
                (kontur as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeRight].Weight = tt;
            }
        }
        private void Ramka(int y, int x, bool up, bool down, bool left, bool right, bool weight)
        {
            Excel.XlBorderWeight tt = Excel.XlBorderWeight.xlMedium;
            if (weight) tt = Excel.XlBorderWeight.xlThin;
            if (down)
            {
                (sheet.Cells[y, x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeBottom].LineStyle = Excel.XlLineStyle.xlDouble;
                (sheet.Cells[y, x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeBottom].Weight = tt;
            }
            if (up)
            {
                (sheet.Cells[y, x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeTop].LineStyle = Excel.XlLineStyle.xlDouble;
                (sheet.Cells[y, x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeTop].Weight = tt;
            }
            if (left)
            {
               (sheet.Cells[y,x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeLeft].LineStyle = Excel.XlLineStyle.xlDouble;
               (sheet.Cells[y,x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeLeft].Weight = Excel.XlBorderWeight.xlMedium;
            }
            if (right)
            {
                (sheet.Cells[y, x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeRight].LineStyle = Excel.XlLineStyle.xlDouble;
                (sheet.Cells[y, x] as Excel.Range).Borders[Excel.XlBordersIndex.xlEdgeRight].Weight = tt;
            }
        }
        private void Pri_1(int y, int x, int xx, string str, bool bold, int centr, bool weight)//0 центр 1 лево, 2 право
        {
            Excel.Range kontur;
            kontur = Oblast(x, y, x+xx-1, y);
            Ramka(kontur, true, true, true, true, weight);
            (sheet.Cells[y, x] as Excel.Range).HorizontalAlignment = Microsoft.Office.Interop.Excel.Constants.xlCenter;
            (sheet.Cells[y, x] as Excel.Range).VerticalAlignment = Microsoft.Office.Interop.Excel.Constants.xlCenter;
            if (centr == 2) kontur.HorizontalAlignment = Microsoft.Office.Interop.Excel.Constants.xlRight; //выравнивание вправо
            if (centr == 1) kontur.HorizontalAlignment = Microsoft.Office.Interop.Excel.Constants.xlLeft;
            out_Cells(y, x, str, bold, size);
        }
        /*
         * (excelworksheet.Columns[1] as Excel.Range).ColumnWidth = 20; //ширина конкретного столбца

            (excelworksheet.Rows[1] as Excel.Range).RowHeight = 20; // высота конкретной строки
         * */
        private void Pri_1(int y, int x, string str, bool bold, int centr, bool weight)//0 центр 1 лево, 2 право
        {
            Ramka(y, x, true, true, true, true, weight);
            (sheet.Cells[y, x] as Excel.Range).HorizontalAlignment = Microsoft.Office.Interop.Excel.Constants.xlCenter;
            (sheet.Cells[y, x] as Excel.Range).VerticalAlignment = Microsoft.Office.Interop.Excel.Constants.xlCenter;
            if (centr == 2) (sheet.Cells[y, x] as Excel.Range).HorizontalAlignment = Microsoft.Office.Interop.Excel.Constants.xlRight; //выравнивание вправо
            if (centr == 1) (sheet.Cells[y, x] as Excel.Range).HorizontalAlignment = Microsoft.Office.Interop.Excel.Constants.xlLeft;
            out_Cells(y, x, str, bold, size);
        }
        void InsertPicToExcel()
        {
            string filePic = AppDomain.CurrentDomain.BaseDirectory + "Config\\Logo_Energomera.jpg";
        //Excel._Application m_app = null;
         // Книга Excel.
         //Excel.Workbook m_workBook = null;
        // Страница Excel.
       // Excel.Worksheet m_workSheet = null;
        //Диапазон ячеек
        Excel.Range rg;// = null;

        
          #region Вставка картинок

              rg = Oblast(1,1,1,1);

              float il, it, iw, ih;
              //float zExcelPixel = 0.746835443f;// для приведения размеров изображения к размерам используемым в Shape

              Image im = Image.FromFile(filePic);
              // rg переменная хранящая ссылку на range относительно левого верхнего угла которого надо вставить изображение
              // координата левого верхнего угола куда вставлять - находяться из range
              il = (float)(double)rg.Left;// размеры поступают в double упакованый в object
              it = (float)(double)rg.Top;

              // размеры изображения для Shape нужно преобразовывать
              iw = /*zExcelPixel*/0.13f * im.Width;// получаем из ширины исходного изображения
              ih = /*zExcelPixel*/0.13f * im.Height;

            // Увеличиваем высоту ячейки 
             //if (im.Height < 409)
               //  rg.RowHeight = zExcelPixel * im.Height;
             //else
                 rg.RowHeight = 55;
                
            sheet.Shapes.AddPicture(filePic, Office.MsoTriState.msoFalse, Office.MsoTriState.msoTrue, il, it, iw, ih);

             #endregion
        
          
        }

        private void PrintToExcel()
        {
            //InsertPicToExcel();
            //bold = false;
            size = 12;
            //font = "Times New Roman";
            excel = new Excel.Application();
            book = excel.Workbooks.Add(System.Reflection.Missing.Value);
            sheet = (Microsoft.Office.Interop.Excel.Worksheet)book.Sheets[1];
            InsertPicToExcel();
            ((Excel.Range)sheet.Columns).ColumnWidth = 15;
            (sheet.Columns[1] as Excel.Range).ColumnWidth = 13;
            (sheet.Columns[2] as Excel.Range).ColumnWidth = 17;
            (sheet.Columns[3] as Excel.Range).ColumnWidth = 14;
            (sheet.Columns[4] as Excel.Range).ColumnWidth = 14;
            (sheet.Columns[5] as Excel.Range).ColumnWidth = 14;
            (sheet.Columns[6] as Excel.Range).ColumnWidth = 14;
            //Pri_1(5, 1, 3, "Счетчик");
          
            Excel.Range kontur;
            kontur = (Excel.Range)sheet.get_Range("E1","F3").Cells;
            kontur.Merge(Type.Missing);
            //(sheet.Cells[5, 2] as Excel.Range).HorizontalAlignment = Microsoft.Office.Interop.Excel.Constants.xlCenter;
            //(sheet.Cells[5, 2] as Excel.Range).VerticalAlignment = Microsoft.Office.Interop.Excel.Constants.xlCenter;
            out_Cells(1, 5, "ул. Комсомольская 30,\n222750, г.Фаниполь, РБ\nпочт.адрес: ул.Немига 40-503,\n220004, г.Минск\nтел. (+375) 211-03-04, 200-77-93,\nфакс 211-01-42", true, 9);
            /*"ул. Комсомольская 30, 222750, г.Фаниполь, РБ", T2, ЦветТекстаТ1, xs + 30 + 250, ys + 10 + 20);
    //        e.Graphics.DrawString("почт.адрес: ул.Немига 40-503, 220004, г.Минск", T2, ЦветТекстаТ1, xs + 30 + 250, ys + 10 + 20 + 12);
    //        e.Graphics.DrawString("тел. (+375) 211-03-04, 200-77-93, факс 211-01-42",*/
            # region
            out_Cells(1,1,"ООО ''Фанипольский завод измерительных приборов ''Энергомера''", true, 11);
            out_Cells(3,2, "АКТ ПАРАМЕТРИЗАЦИИ от " + dateTimePickerDataAkta.Text,true,14);
            Pri_1(5, 1, 3, "Счетчик", true, 1, true);
            Pri_1(5, 4, 3, Tip_Sh + " " + TipSh,true, 1, true);//MTsh[0] = "Модель счетчика"; MTshZ[0] = Tip_Sh + " " + TipSh;
            Oblast(4, 6, 6, 6, true).NumberFormat = "@";
            Pri_1(6, 1, 3, "Заводской номер", true, 1, true);
            Pri_1(6, 4, 3, textBoxZavNomer.Text, true, 1, true);//MTsh[1] = "Заводской номер"; MTshZ[1] = textBoxZavNomer.Text;
            Pri_1(7, 1, 3, "Дата поверки", true, 1, true);    
            Pri_1(7, 4, 3, comboBoxDataPKv.Text + " кв. " + textBoxDataPGod.Text + " г.", true, 1, true);//MTsh[2] = "Поверка"; MTshZ[2] = comboBoxDataPKv.Text + " кв. " + textBoxDataPGod.Text + " г.";
            Pri_1(8, 1, 3, "Ток номинальный (максимальный), А", false, 1, true);    
            Pri_1(8, 4, 3, ShI, false, 1, true);//MTsh[3] = "Ток номинальный (максимальный), А"; MTshZ[3] = ShI;
            Pri_1(9, 1, 3, "Номинальное напряжение, В", false, 1, true); 
            Pri_1(9, 4, 3, ShU, false, 1, true);//MTsh[4] = "Номинальное напряжение, В"; MTshZ[4] = ShU;
            Pri_1(10, 1, 3, "Постоянная счетчика, имп/кВт*час(квар*час)", false, 1, true); 
            Pri_1(10, 4, 3, ShPost, false, 1, true);//MTsh[5] = "Постоянная счетчика, имп/кВт*час"; MTshZ[5] = ShPost;
            Pri_1(11, 1, 3, "Класс точности", false, 1, true); 
            Pri_1(11, 4, 3, ShCl, false, 1, true);// MTsh[6] = "Класс точности"; MTshZ[6] = ShCl;
            Pri_1(12, 1, 3, "Разрядность", false, 1, true); 
            Pri_1(12, 4, 3, LCDPoz, false, 1, true);//MTsh[12] = "Разрядность"; MTshZ[12] = LCDPoz;
            Pri_1(13, 1, 3, "Вывод на ЖКИ", false, 1, true);
            Pri_1(13, 4, 3, "Вывод на ЖКИ", false, 1, true);//***********************************************
            Pri_1(14, 1, 3, "Версия ВПО", false, 1, true);
            Oblast(4, 14, 6, 14, true).NumberFormat = "@";
            Pri_1(14, 4, 3, textBoxVPO.Text, false, 1, true);//MTsh[7] = "Версия ВПО"; MTshZ[7] = textBoxVPO.Text;
            Pri_1(15, 1, 3, "Сетевой адрес", false, 1, true);
            string tba = textBoxAdres.Text;
            if (textBoxAdres.Text == "777777") tba = "нет";
            Pri_1(15, 4, 3, tba, false, 1, true);//MTsh[8] = "Адрес"; MTshZ[8] = textBoxAdres.Text;
            Pri_1(16, 1, 3, "Пароль доступа", false, 1, true);
            Pri_1(16, 4, 3, textBoxPass.Text, false, 1, true);// MTsh[9] = "Пароль"; MTshZ[9] = textBoxPass.Text;
                
                Pri_1(17, 1, 3, "Интерфейс оптический " + IOpto, false, 1, true);//MTsh[10] = "Интерфейс оптический " + IOpto; MTshZ[10] = IOptoSp + " " + "бит/с";
                if (IOpto == "нет")
                {
                    Pri_1(17, 4, 3, "нет", false, 1, true);
                }
                else
                {
                    Pri_1(17, 4, 3, IOptoSp + " " + "бит/с", false, 1, true);//MTsh[10] = "Интерфейс оптический " + IOpto; MTshZ[10] = IOptoSp + " " + "бит/с";
                }
                Pri_1(18, 1, 3, "Интерфейс цифровой " + IDig, false, 1, true);//MTsh[11] = "Интерфейс цифровой " + IDig; MTshZ[11] = IDigSped + " " + "бит/с";
                Pri_1(18, 4, 3, IDigSped + " " + "бит/с", false, 1, true);//MTsh[11] = "Интерфейс цифровой " + IDig; MTshZ[11] = IDigSped + " " + "бит/с";    
            //"Переход зима/лето";
                Pri_1(19, 1, 3, "Переход зима/лето и лето/зима", false, 1, true);
                if (SezonOn == true)
                    Pri_1(19, 4, 3, "Включен", false, 1, true);
                else
                    Pri_1(19, 4, 3, "Выключен", false, 1, true);
                //"Тарификация выходных и праздничных дней";
                Pri_1(20, 1, 3, "Тарификация выходных и праздничных дней", false, 1, true);
                if (Prazdnik == true)
                    Pri_1(20, 4, 3, "Включена", false, 1, true);
                else
                    Pri_1(20, 4, 3, "Выключена", false, 1, true);
            //фисированные даты
                if (comboBoxFiksData.Text.Substring(0,1) == "8") 
                {
                    (sheet.Rows[21] as Excel.Range).RowHeight = 32;
                    Pri_1(21, 4, 3, "8 (1,7 января, 8 марта, 1,9 мая\n3 июля, 11 ноября, 25 декабря)", false, 1, true);
                }
                else
                {
                    
                    Pri_1(21, 4, 3, comboBoxFiksData.Text, false, 1, true);
                }
                Pri_1(21, 1, 3, "Фиксированные даты", false, 1, true);
                //Pri_1(21, 4, 3, comboBoxFiksData.Text, false, 1, true);// MTsh[16] = "Фиксированные даты"; MTshZ[16] = comboBoxFiksData.Text;

                //(sheet.Cells[23, 1] as Excel.Range).AutoFit();
                
                //(sheet.Cells[23,1] as Excel.Range).AutoFit();
                // (Oblast(1,23,2,23,true) as Excel.Range).AutoFit();
                # endregion
            # region
                if (Tip_Sh.Substring(0, 5) == "CE303" | Tip_Sh.Substring(0, 5) == "СЕ303")
                {
                    (sheet.Rows[13] as Excel.Range).RowHeight = 64;
                    Pri_1(13, 4, 3, "Для каждого вида энергии:\n суммарно по всем тарифам, \nТ1, Т2, Т3, Т сум. по задействов. тарифам\nтекущее время, текущая дата", false, 1, true);
                   
                    Pri_1(23, 1, 2, "Сезон 1\nдействует с 01 по 12 мес", false, 0, false);
                    Pri_1(23, 3, 4, "Показания", false, 0, false);
                    Pri_1(24, 1, "Тариф", false, 0, false);
                    Pri_1(24, 2, "Часы суток", false, 0, false);
                    Pri_1(24, 3, "Активная\nпотребленная\nкВт", false, 0, false);
                    Pri_1(24, 4, "Активная\nотпущенная\nкВт", false, 0, false);
                    Pri_1(24, 5, "Реактивная\nпотребленная\nкВт", false, 0, false);
                    Pri_1(24, 6, "Реактивная\nотпущенная\nкВт", false, 0, false);
                    Oblast(3, 25, 6, 28, true).NumberFormat = "@";
                    if (comboBoxTarif.Text == "3")
                    {
                        Pri_1(25, 1, "Т1, дневной", false, 0, false);
                        Pri_1(25, 2, "с 06-00 до 08-00\nс11-00 до 23-00", false, 0, false);
                        Pri_1(26, 1, "Т2, ночной", false, 0, false);
                        Pri_1(26, 2, "с 23-00 до 06-00", false, 0, false);
                        Pri_1(27, 1, "Т3, максимум", false, 0, false);
                        Pri_1(27, 2, "с 08-00 до 11-00", false, 0, false);
                        Pri_1(28, 1, "Т = Т1+Т2+Т3", false, 0, false);
                        Pri_1(28, 2, "с 00-00 до 24-00", false, 0, false);
                        //(sheet.Cells[25, 3] as Excel.Range).NumberFormat = "@";//текстовый формат "0.00"-числовой
                        //Oblast(3, 25, 6, 28, true).NumberFormat = "@";
                        Pri_1(25, 3, textBoxT1Ap.Text, true, 0, false);
                        Pri_1(26, 3, textBoxT2Ap.Text, true, 0, false);
                        Pri_1(27, 3, textBoxT3Ap.Text, true, 0, false);
                        Pri_1(28, 3, textBoxTCAp.Text, true, 0, false);

                        Pri_1(25, 4, textBoxT1Am.Text, true, 0, false);
                        Pri_1(26, 4, textBoxT2Am.Text, true, 0, false);
                        Pri_1(27, 4, textBoxT3Am.Text, true, 0, false);
                        Pri_1(28, 4, textBoxTCAm.Text, true, 0, false);

                        Pri_1(25, 5, textBoxT1Rp.Text, true, 0, false);
                        Pri_1(26, 5, textBoxT2Rp.Text, true, 0, false);
                        Pri_1(27, 5, textBoxT3Rp.Text, true, 0, false);
                        Pri_1(28, 5, textBoxTCRp.Text, true, 0, false);

                        Pri_1(25, 6, textBoxT1Rm.Text, true, 0, false);
                        Pri_1(26, 6, textBoxT2Rm.Text, true, 0, false);
                        Pri_1(27, 6, textBoxT3Rm.Text, true, 0, false);
                        Pri_1(28, 6, textBoxTCRm.Text, true, 0, false);
                    }
                    if (comboBoxTarif.Text == "2")
                    {
                        Pri_1(25, 3, textBoxT1Ap.Text, true, 0, false);
                        Pri_1(26, 3, textBoxT2Ap.Text, true, 0, false);
                        //Pri_1(27, 3, textBoxT3Ap.Text, true, 0, false);
                        Pri_1(28 - 1, 3, textBoxTCAp.Text, true, 0, false);

                        Pri_1(25, 4, textBoxT1Am.Text, true, 0, false);
                        Pri_1(26, 4, textBoxT2Am.Text, true, 0, false);
                        //Pri_1(27, 4, textBoxT3Am.Text, true, 0, false);
                        Pri_1(28 - 1, 4, textBoxTCAm.Text, true, 0, false);

                        Pri_1(25, 5, textBoxT1Rp.Text, true, 0, false);
                        Pri_1(26, 5, textBoxT2Rp.Text, true, 0, false);
                        //Pri_1(27, 5, textBoxT3Rp.Text, true, 0, false);
                        Pri_1(28 - 1, 5, textBoxTCRp.Text, true, 0, false);

                        Pri_1(25, 6, textBoxT1Rm.Text, true, 0, false);
                        Pri_1(26, 6, textBoxT2Rm.Text, true, 0, false);
                        //Pri_1(27, 6, textBoxT3Rm.Text, false, 0, false);
                        Pri_1(28 - 1, 6, textBoxTCRm.Text, true, 0, false);
                        if (checkBox_dif.Checked)
                        {
                            Pri_1(25, 1, "Т1, макс", false, 0, false);
                            Pri_1(25, 2, "с 17-00 до 22-00", false, 0, false);
                            Pri_1(26, 1, "Т2, мин", false, 0, false);
                            Pri_1(26, 2, "с 22-00 до 17-00\n(рабочие дни)\nс 00-00 до 24-00\n(субб., воскр и\nпраздн. дни)", false, 0, false);
                            //Pri_1(27, 1, "Т3, максимум", false, 0, false);
                            //Pri_1(27, 2, "с 08-00 до 11-00", false, 0, false);
                            Pri_1(28 - 1, 1, "Т = Т1+Т2", false, 0, false);
                            Pri_1(28 - 1, 2, "с 00-00 до 24-00", false, 0, false);
                            //(sheet.Cells[25, 3] as Excel.Range).NumberFormat = "@";//текстовый формат "0.00"-числовой
                            //Oblast(3, 25, 6, 28, true).NumberFormat = "@";
                        }
                        else
                        {
                            Pri_1(25, 1, "Т1, макс", false, 0, false);
                            Pri_1(25, 2, "с 06-00 до 23-00", false, 0, false);
                            Pri_1(26, 1, "Т2, мин", false, 0, false);
                            Pri_1(26, 2, "с 23-00 до 06-00", false, 0, false);
                            //Pri_1(27, 1, "Т3, максимум", false, 0, false);
                            //Pri_1(27, 2, "с 08-00 до 11-00", false, 0, false);
                            Pri_1(28 - 1, 1, "Т = Т1+Т2", false, 0, false);
                            Pri_1(28 - 1, 2, "с 00-00 до 24-00", false, 0, false);
                        }
                    }
                    if (comboBoxTarif.Text == "1")
                    {
                        Pri_1(25, 3, textBoxT1Ap.Text, true, 0, false);
                        //Pri_1(26, 3, textBoxT2Ap.Text, false, 0, false);
                        //Pri_1(27, 3, textBoxT3Ap.Text, false, 0, false);
                        Pri_1(28 - 2, 3, textBoxTCAp.Text, true, 0, false);

                        Pri_1(25, 4, textBoxT1Am.Text, true, 0, false);
                        //Pri_1(26, 4, textBoxT2Am.Text, false, 0, false);
                        //Pri_1(27, 4, textBoxT3Am.Text, false, 0, false);
                        Pri_1(28 - 2, 4, textBoxTCAm.Text, true, 0, false);

                        Pri_1(25, 5, textBoxT1Rp.Text, true, 0, false);
                        //Pri_1(26, 5, textBoxT2Rp.Text, false, 0, false);
                        //Pri_1(27, 5, textBoxT3Rp.Text, false, 0, false);
                        Pri_1(28 - 2, 5, textBoxTCRp.Text, true, 0, false);

                        Pri_1(25, 6, textBoxT1Rm.Text, true, 0, false);
                        //Pri_1(26, 6, textBoxT2Rm.Text, false, 0, false);
                        //Pri_1(27, 6, textBoxT3Rm.Text, false, 0, false);
                        Pri_1(28 - 2, 6, textBoxTCRm.Text, true, 0, false);
                        Pri_1(25, 1, "Т1", false, 0, false);
                        Pri_1(25, 2, "с 00-00 до 24-00", false, 0, false);
                        //Pri_1(26, 1, "Т2, дифф", false, 0, false);
                        //Pri_1(26, 2, "с 23-00 до 06-00", false, 0, false);
                        //Pri_1(27, 1, "Т3, максимум", false, 0, false);
                        //Pri_1(27, 2, "с 08-00 до 11-00", false, 0, false);
                        Pri_1(28 - 2, 1, "Т = Т1", false, 0, false);
                        Pri_1(28 - 2, 2, "с 00-00 до 24-00", false, 0, false);
                        //(sheet.Cells[25, 3] as Excel.Range).NumberFormat = "@";//текстовый формат "0.00"-числовой
                        //Oblast(3, 25, 6, 28, true).NumberFormat = "@";

                    }
                }
                # endregion
                else//СE102...301
                {
                    Pri_1(10, 1, 3, "Постоянная счетчика, имп/кВт*час", false, 1, true); 
                    Pri_1(13, 4, 3, comboBoxLCDInfo.Text, false, 1, true);
                    //(sheet.Rows[23] as Excel.Range).RowHeight = 32;
                    Pri_1(23, 1,  "Тариф", false, 0, false);
                    Pri_1(23, 2, "Показания (кВт*ч)", false, 0, false);
                    Pri_1(23, 3, 3, "Часы суток (Сезон 1 действует с 01 по 12 мес)", false, 0, false);
                    //Pri_1(24, 2, "Часы суток", false, 0, false);
                    //Pri_1(24, 3, "Активная\nпотребленная\nкВт", false, 0, false);
                    //Pri_1(24, 4, "Активная\nотпущенная\nкВт", false, 0, false);
                    //Pri_1(24, 5, "Реактивная\nпотребленная\nкВт", false, 0, false);
                    //Pri_1(24, 6, "Реактивная\nотпущенная\nкВт", false, 0, false);
                    Oblast(2, 24, 2, 27, true).NumberFormat = "@";
                    if (comboBoxTarif.Text == "3")
                    {
                        Pri_1(24, 1, "Т1, дневной", false, 0, false);
                        Pri_1(24, 3, 3, "с 06-00 до 08-00, 11-00 до 23-00", false, 0, false);
                        Pri_1(25, 1, "Т2, ночной", false, 0, false);
                        Pri_1(25, 3, 3, "с 23-00 до 06-00", false, 0, false);
                        Pri_1(26, 1, "Т3, максимум", false, 0, false);
                        Pri_1(26, 3, 3, "с 08-00 до 11-00", false, 0, false);
                        Pri_1(27, 1, "Т = Т1+Т2+Т3", false, 0, false);
                        Pri_1(27, 3, 3,"с 00-00 до 24-00", false, 0, false);
                        //(sheet.Cells[25, 3] as Excel.Range).NumberFormat = "@";//текстовый формат "0.00"-числовой
                        //Oblast(3, 25, 6, 28, true).NumberFormat = "@";
                        Pri_1(24, 2, textBoxT1Ap.Text, true, 0, false);
                        Pri_1(25, 2, textBoxT2Ap.Text, true, 0, false);
                        Pri_1(26, 2, textBoxT3Ap.Text, true, 0, false);
                        Pri_1(27, 2, textBoxTCAp.Text, true, 0, false);
                    }
                    if (comboBoxTarif.Text == "2")
                    {
                        Pri_1(24, 2, textBoxT1Ap.Text, true, 0, false);
                        Pri_1(25, 2, textBoxT2Ap.Text, true, 0, false);
                        //Pri_1(26, 2, textBoxT3Ap.Text, true, 0, false);
                        Pri_1(27-1, 2, textBoxTCAp.Text, true, 0, false);
                        if (checkBox_dif.Checked)
                        {
                            (sheet.Rows[25] as Excel.Range).RowHeight = 32;
                            Pri_1(24, 1, "Т1, макс", false, 0, false);
                            Pri_1(24, 3, 3, "с 17-00 до 22-00", false, 0, false);
                            Pri_1(25, 1, "Т2, мин", false, 0, false);
                            Pri_1(25, 3, 3, "с 22-00 до 17-00 (рабочие дни)\nс 00-00 до 24-00 (субб., воскр. и праздн. дни)", false, 0, false);
                            //Pri_1(26, 1, "Т3, максимум", false, 0, false);
                            //Pri_1(26, 3, 3, "с 08-00 до 11-00", false, 0, false);
                            Pri_1(27-1, 1, "Т = Т1+Т2", false, 0, false);
                            Pri_1(27-1, 3, 3, "с 00-00 до 24-00", false, 0, false);
                            
                        }
                        else
                        {
                            Pri_1(24, 1, "Т1, дневной", false, 0, false);
                            Pri_1(24, 3, 3, "с 06-00 до 23-00", false, 0, false);
                            Pri_1(25, 1, "Т2, ночной", false, 0, false);
                            Pri_1(25, 3, 3, "с 23-00 до 06-00", false, 0, false);
                            //Pri_1(26, 1, "Т3, максимум", false, 0, false);
                            //Pri_1(26, 3, 3, "с 08-00 до 11-00", false, 0, false);
                            Pri_1(27-1, 1, "Т = Т1+Т2", false, 0, false);
                            Pri_1(27-1, 3, 3, "с 00-00 до 24-00", false, 0, false);
                        }
                    }
                    if (comboBoxTarif.Text == "1")
                    {
                        Pri_1(24, 2, textBoxT1Ap.Text, true, 0, false);
                        //Pri_1(25, 2, textBoxT2Ap.Text, true, 0, false);
                        //Pri_1(26, 2, textBoxT3Ap.Text, true, 0, false);
                        Pri_1(27 - 2, 2, textBoxTCAp.Text, true, 0, false);
                        
                        
                            //(sheet.Rows[25] as Excel.Range).RowHeight = 32;
                            Pri_1(24, 1, "Т1", false, 0, false);
                            Pri_1(24, 3, 3, "с 00-00 до 24-00", false, 0, false);
                            //Pri_1(25, 1, "Т2, мин", false, 0, false);
                            //Pri_1(25, 3, 3, "с 22-00 до 17-00 (рабочие дни)\nс 00-00 до 24-00 (субб., воскр. и праздн. дни)", false, 0, false);
                            //Pri_1(26, 1, "Т3, максимум", false, 0, false);
                            //Pri_1(26, 3, 3, "с 08-00 до 11-00", false, 0, false);
                            Pri_1(27 - 2, 1, "Т = Т1", false, 0, false);
                            Pri_1(27 - 2, 3, 3, "с 00-00 до 24-00", false, 0, false);

                        
                        
                    }

                }
                

                //Pri_1(30, 2, 1, "Ответственный", false, 1, true);
                //Pri_1(30, 5, 1, textBoxPass.Text, false, 1, true);
                out_Cells(30, 2, "Исполнитель", true, 12);
                out_Cells(30, 5, comboBoxOtvetctv.Text, true, 12);
            //ObjExcel.Cells[46, 4] = comboBoxOtvetctv.Text;
            /*Sub macros1()
            Cells.Select
            Range("R13").Activate
            Selection.Columns.AutoFit
            End Sub*/
                //(sheet.Rows[23] as Excel.Range).AutoFit();
             
                //Выставляем поля документа
                sheet.PageSetup.LeftMargin = 10;
                sheet.PageSetup.RightMargin = 5;
                sheet.PageSetup.TopMargin = 10;//сверху
                sheet.PageSetup.BottomMargin = 0;
                sheet.PageSetup.HeaderMargin = 0;
                sheet.PageSetup.FooterMargin = 0;
                //Выставляем параметры печати
                sheet.PageSetup.Zoom = false;
                sheet.PageSetup.FitToPagesWide = 1;
                sheet.PageSetup.FitToPagesTall = 1;

            //формат и ориентация печати
                if (flFormat == "A4")
                {
                    sheet.PageSetup.PaperSize = Excel.XlPaperSize.xlPaperA4;
                }
                else
                {
                    sheet.PageSetup.PaperSize = Excel.XlPaperSize.xlPaperA5;
                }

                if (flOrient == "A")
                {
                    sheet.PageSetup.Orientation = Excel.XlPageOrientation.xlLandscape;//ландшафт
                }
                else
                {
                    sheet.PageSetup.Orientation = Excel.XlPageOrientation.xlPortrait;//книга
                }
                
                //sheet.PageSetup.Orientation = Excel.XlPageOrientation.xlLandscape;//ландшафт
                //sheet.PageSetup.Orientation = Excel.XlPageOrientation.xlPortrait;//книга
               // sheet.PageSetup.PaperSize = Excel.XlPaperSize.xlPaperA4;
            //excel.Visible = true;
                //sheet.PrintPreview();
                string strpri = GetDefaultPrinterName();
                //    PrinterSettings.InstalledPrinters.Count.

            sheet.PrintOut();
            // Закрытие приложения Excel.
            book.Close(false, "", null);
            excel.Quit();
            book = null; sheet = null; excel = null; GC.Collect();

            MessageBox.Show("Файл отправлен на принтер:\n" + strpri, "Счетчик " + Tip_Sh + " " + TipSh);
        }
        //private static string GetDefaultPrinterName()
        /*using System.Drawing.Printing;
        {
            string default_printer = "";

            foreach (string printer in PrinterSettings.InstalledPrinters)
            {
                if (new PrinterSettings() { PrinterName = printer }.IsDefaultPrinter)
                {
                    default_printer = printer;
                }
                else
                {
                    default_printer = "null";
                }
            }

            return default_printer;
      }*/
        private static string GetDefaultPrinterName()
        //using System.Linq;

        {
            String[] printers = PrinterSettings.InstalledPrinters.Cast<string>().ToArray();
            for (int i = 0; i < printers.Length; i++)
                if (new PrinterSettings() { PrinterName = printers[i] }.IsDefaultPrinter)
                    return printers[i];
            return null;
        }


        //private void Печать_в_Exel()
        //{
        //    string name_file = System.Windows.Forms.Application.StartupPath + "\\" + "Акт параметризации.xlsx";
        //    try
        //    {
        //        ObjExcel = new Microsoft.Office.Interop.Excel.Application();
        //        //Книга.
        //        ObjWorkBook = ObjExcel.Workbooks.Open(name_file);
        //        //Таблица.
        //        ObjWorkSheet = (Microsoft.Office.Interop.Excel.Worksheet)ObjWorkBook.Sheets[1];
        //        //заполнение ячеек
        //        /*Excel.Application ObjWorkExcel = new Excel.Application(); //открыть эксель
        //        Excel.Workbook ObjWorkBook = ObjWorkExcel.Workbooks.Open(@"C:\1.xlsx", Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing); //открыть файл
        //        Excel.Worksheet ObjWorkSheet = (Excel.Worksheet)ObjWorkBook.Sheets[1]; //получить 1 лист
        //        var lastCell = ObjWorkSheet.Cells.SpecialCells(Excel.XlCellType.xlCellTypeLastCell);//1 ячейку
        //        string[,] list = new string[lastCell.Column, lastCell.Row]; // массив значений с листа равен по размеру листу
        //        for (int i = 0; i < lastCell.Column; i++) //по всем колонкам
        //            for (int j = 0; j < lastCell.Row; j++) // по всем строкам
        //                list[i, j] = ObjWorkSheet.Cells[j + 1, i + 1].Text.ToString();//считываем текст в строку
        //        ObjWorkBook.Close(false, Type.Missing, Type.Missing); //закрыть не сохраняя
        //        ObjWorkExcel.Quit(); // выйти из экселя
        //        GC.Collect(); // убрать за собой*/
        //        //this.Text = Convert.ToString(ObjWorkSheet.Cells[6, 2].Text);
        //        //ObjExcel.Cells[6, 2] = Convert.ToString(ObjWorkSheet.Cells[6, 2].Value) + " " + dateTimePickerDataAkta.Text;
        //        Excel.Range cellRange = (Excel.Range)ObjWorkSheet.Cells[6, 2];
        //        string s01 = cellRange.Value.ToString();
        //        //this.Text = s01;
        //        ObjExcel.Cells[6, 2] = s01 + " " + dateTimePickerDataAkta.Text;
        //        ObjExcel.Cells[8, 4] = Tip_Sh + " " + TipSh;//MTsh[0] = "Модель счетчика"; MTshZ[0] = Tip_Sh + " " + TipSh;
        //        ObjExcel.Cells[9, 4] = textBoxZavNomer.Text;//MTsh[1] = "Заводской номер"; MTshZ[1] = textBoxZavNomer.Text;
        //        ObjExcel.Cells[10, 4] = comboBoxDataPKv.Text + " кв. " + textBoxDataPGod.Text + " г.";//MTsh[2] = "Поверка"; MTshZ[2] = comboBoxDataPKv.Text + " кв. " + textBoxDataPGod.Text + " г.";
        //        ObjExcel.Cells[11, 4] = ShI;//MTsh[3] = "Ток номинальный (максимальный), А"; MTshZ[3] = ShI;
        //        ObjExcel.Cells[12, 4] = ShU;//MTsh[4] = "Номинальное напряжение, В"; MTshZ[4] = ShU;
        //        ObjExcel.Cells[13, 4] = ShPost;//MTsh[5] = "Постоянная счетчика, имп/кВт*час"; MTshZ[5] = ShPost;
        //        ObjExcel.Cells[14, 4] = ShCl;// MTsh[6] = "Класс точности"; MTshZ[6] = ShCl;
        //        ObjExcel.Cells[15, 4] = LCDPoz;//MTsh[12] = "Разрядность"; MTshZ[12] = LCDPoz;
        //        ObjExcel.Cells[20, 4] = textBoxVPO.Text;//MTsh[7] = "Версия ВПО"; MTshZ[7] = textBoxVPO.Text;
        //        ObjExcel.Cells[21, 4] = textBoxAdres.Text;//MTsh[8] = "Адрес"; MTshZ[8] = textBoxAdres.Text;
        //        ObjExcel.Cells[22, 4] = textBoxPass.Text;// MTsh[9] = "Пароль"; MTshZ[9] = textBoxPass.Text;
        //        ObjExcel.Cells[23, 4] = IOptoSp + " " + "бит/с";//MTsh[10] = "Интерфейс оптический " + IOpto; MTshZ[10] = IOptoSp + " " + "бит/с";
        //        ObjExcel.Cells[23, 1] = "Интерфейс оптический " + IOpto;//MTsh[10] = "Интерфейс оптический " + IOpto; MTshZ[10] = IOptoSp + " " + "бит/с";
        //        ObjExcel.Cells[24, 4] = IDigSped + " " + "бит/с";//MTsh[11] = "Интерфейс цифровой " + IDig; MTshZ[11] = IDigSped + " " + "бит/с";
        //        ObjExcel.Cells[24, 1] = "Интерфейс цифровой " + IDig;//MTsh[11] = "Интерфейс цифровой " + IDig; MTshZ[11] = IDigSped + " " + "бит/с";

        //        //"Переход зима/лето";

        //        if (SezonOn == true)
        //            ObjExcel.Cells[25, 4] = "Включен";
        //        else
        //            ObjExcel.Cells[25, 4] = "Выключен";
        //        //"Тарификация выходных и праздничных дней";
        //        if (Prazdnik == true)
        //            ObjExcel.Cells[26, 4] = "Включена";
        //        else
        //            ObjExcel.Cells[26, 4] = "Выключена";
        //        ObjExcel.Cells[27, 4] = comboBoxFiksData.Text;// MTsh[16] = "Фиксированные даты"; MTshZ[16] = comboBoxFiksData.Text;
        //        ObjExcel.Cells[36, 2] = textBoxT1Ap.Text;
        //        ObjExcel.Cells[39, 2] = textBoxT2Ap.Text;
        //        ObjExcel.Cells[41, 2] = textBoxT3Ap.Text;
        //        ObjExcel.Cells[43, 2] = textBoxTCAp.Text;

        //        ObjExcel.Cells[36, 3] = textBoxT1Am.Text;
        //        ObjExcel.Cells[39, 3] = textBoxT2Am.Text;
        //        ObjExcel.Cells[41, 3] = textBoxT3Am.Text;
        //        ObjExcel.Cells[43, 3] = textBoxTCAm.Text;

        //        ObjExcel.Cells[36, 4] = textBoxT1Rp.Text;
        //        ObjExcel.Cells[39, 4] = textBoxT2Rp.Text;
        //        ObjExcel.Cells[41, 4] = textBoxT3Rp.Text;
        //        ObjExcel.Cells[43, 4] = textBoxTCRp.Text;

        //        ObjExcel.Cells[36, 5] = textBoxT1Rm.Text;
        //        ObjExcel.Cells[39, 5] = textBoxT2Rm.Text;
        //        ObjExcel.Cells[41, 5] = textBoxT3Rm.Text;
        //        ObjExcel.Cells[43, 5] = textBoxTCRm.Text;
        //        ObjExcel.Cells[46, 4] = comboBoxOtvetctv.Text;

        //        //ObjWorkBook.PrintOutEx();

        //        ObjWorkSheet.PrintOut();//************************

        //        //ObjWorkSheet.PrintPreview();
        //        //ObjWorkBook.SaveAs(name_file);
        //        MessageBox.Show("Печать завершена.");
        //    }
        //    catch (Exception ex) { MessageBox.Show("Ошибка: " + ex.Message, "Ошибка при считывании excel файла", MessageBoxButtons.OK, MessageBoxIcon.Error); }
        //    finally
        //    {
        //        ObjWorkBook.Close(false, "", null);
        //        // Закрытие приложения Excel.
        //        ObjExcel.Quit();
        //        ObjWorkBook = null;
        //        ObjWorkSheet = null;
        //        ObjExcel = null;
        //        GC.Collect();
        //    }


        //}
