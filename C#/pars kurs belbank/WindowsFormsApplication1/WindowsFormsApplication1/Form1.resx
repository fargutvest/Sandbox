<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QCMRXhpZgAATU0AKgAAAAgABwEaAAUAAAABAAAAYgEbAAUAAAAB
        AAAAagEoAAMAAAABAAIAAAExAAIAAAASAAAAclEQAAEAAAABAQAAAFERAAQAAAABAAAAAFESAAQAAAAB
        AAAAAAAAAAAAAABgAAAAAQAAAGAAAAABUGFpbnQuTkVUIHYzLjUuMTEA/9sAQwACAQECAQECAgICAgIC
        AgMFAwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgID
        AwMGAwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        /8AAEQgAGQD8AwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIB
        AwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYn
        KCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqi
        o6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8B
        AAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYS
        QVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZX
        WFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+kf2LPHfw2+Onww0MePv
        2wPjz4V+Il5JOmo6YPHNxp9lbsLiVYQktxA0fzQiJj+9b5mI4Pyj6M+Nn7IXg/8AZ4+HH/CXeLP2n/2s
        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
</value>
  </data>
</root>